# Default parameters defined in WasteCarrierConfiguration

# messageQueue complex parameter to show class of different configuration types MessageQueueConfiguration
messageQueue:
  host: WCRS_SERVICES_MQ_HOST
  port: WCRS_SERVICES_MQ_PORT

# Added standard logging information
logging:
  # ...

  #standard logging level (should usually be INFO)
  level: INFO

  #Redefining logging levels for selected classes and packages
  loggers:
    "org.elasticsearch.client.transport": TRACE

  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

# added database connection properties, DatabaseConfiguration
database:
  host: WCRS_REGSDB_HOST
  port: WCRS_REGSDB_PORT1
  name: WCRS_REGSDB_NAME
  username: WCRS_REGSDB_USERNAME
  password: WCRS_REGSDB_PASSWORD

# added user database connection properties, DatabaseConfiguration
userDatabase:
  host: WCRS_USERSDB_HOST
  port: WCRS_USERSDB_PORT1
  name: WCRS_USERSDB_NAME
  username: WCRS_USERSDB_USERNAME
  password: WCRS_USERSDB_PASSWORD

elasticSearch:
  host: WCRS_ELASDB_HOST
  port: WCRS_ELASDB_PORT_JAVA
  # Can also specify a size for the maximum number of results to return in a given query
  # By default the 100 is used, but can be overridden here if specified
  #size: 100

http:
  # The port on which the HTTP server listens for service requests.
  # Because Java cannot drop privileges in a POSIX system, these
  # ports cannot be in the range 1-1024. A port value of 0 will
  # make the OS use an arbitrary unused port.
  port: WCRS_SERVICES_PORT

  # The port on which the HTTP server listens for administrative
  # requests. Subject to the same limitations as "port". If this is
  # set to the same value as port, the admin routes will be mounted
  # under /admin.
  adminPort: WCRS_SERVICES_ADMIN_PORT

settings:
  # registration period (in years)
  registrationPeriod: WCRS_REGISTRATION_EXPIRES_AFTER
  # renew period (in months)
  registrationRenewPeriod: WCRS_REGISTRATION_RENEWAL_WINDOW

airbrake:
  url: WCRS_SERVICES_AIRBRAKE_URL
  apiKey: WCRS_SERVICES_AIRBRAKE_API_KEY
  environmentName: WCRS_SERVICES_AIRBRAKE_ENVNAME
  # The 'threshold' here can take values: OFF, ERROR, WARN, INFO, DEBUG, TRACE
  # or ALL.  If no value is provided, or the value is unrecognised, by default
  # we only forward messages at ERROR severity.
  threshold: WCRS_SERVICES_AIRBRAKE_THRESHOLD 
  # Other values you can set for Airbrake integration, but not required:
  # enabled: true or false (default = true)
  # exceptionsOnly: true or false (default = false)
  
# IrRenewals brings a very limitted set of data into Waste Carriers to allow
# IR customers to "renew" in the service.
irRenewals:
  irFolderPath: WCRS_SERVICES_IR_RENEWAL_FOLDERPATH

exportJob:
  # File to use for EPR exports (note: file, not directory).
  eprExportFile: WCRS_SERVICES_EPR_EXPORT_FILE
  # Date format to use for EPR exports.
  eprExportDateFormat: "yyyy-MM-dd"
  # Path to use for Reporting Snapshot exports (note: directory, not file).
  reportingExportPath: WCRS_SERVICES_REPORTING_EXPORT_PATH
  # Date format to use for Reporting Snapshot exports.
  reportingExportDateFormat: "yyyy-MM-dd'T'HH:mm'Z'"
  # Money format to use for Reporting Snapshot exports.
  reportingExportMoneyFormat: "0.00"
  # Cron expression for scheduled job exectuion.  Leave empty to make the job
  # run on a manual trigger only.  Default is daily at 9pm.
  cronExpression: WCRS_SERVICES_EXPORT_JOB_CRON_SCHEDULE

registrationStatusJob:
  # Cron expression for scheduled job exectuion.  Leave empty to make the job
  # run on a manual trigger only.  Default is daily at 8pm.
  cronExpression: WCRS_SERVICES_STATUS_JOB_CRON_SCHEDULE

# more properties go here
